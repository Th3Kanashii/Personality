from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
from aiogram.utils.keyboard import ReplyKeyboardBuilder


def start(subscriptions: list) -> ReplyKeyboardMarkup:
    """
    Generates a reply keyboard for starting a chat session.

    :param subscriptions: A list of subscription categories.
    :return: A reply keyboard markup with options for each subscription category.
             Subscribed categories are marked with a checkmark (‚úÖ).
    """
    keyboard = ReplyKeyboardBuilder()
    categories = [
        "–ú–æ–ª–æ–¥—ñ–∂–Ω–∞ –ø–æ–ª—ñ—Ç–∏–∫–∞ üìö",
        "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∞ üßò",
        "–ì—Ä–æ–º–∞–¥—è–Ω—Å—å–∫–∞ –æ—Å–≤—ñ—Ç–∞ üèõ",
        "–Æ—Ä–∏–¥–∏—á–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ ‚öñÔ∏è",
        "–ñ–∏–≤–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ üìñ",
    ]
    for category in categories:
        if category in subscriptions:
            keyboard.row(
                KeyboardButton(text=category.replace(category.split()[-1], "‚úÖ"))
            )
        else:
            keyboard.row(KeyboardButton(text=category))

    return keyboard.as_markup(resize_keyboard=True)


def cancel_subscription() -> ReplyKeyboardMarkup:
    """
    Generates a reply keyboard for canceling a subscription.

    :return: A reply keyboard markup with options to cancel a subscription and return to the main menu.
    """
    keyboard = ReplyKeyboardBuilder()
    keyboard.row(
        KeyboardButton(text="–°–∫–∞—Å—É–≤–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É ‚ùå"),
        KeyboardButton(text="–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é üìå"),
    )

    keyboard.adjust(2)
    return keyboard.as_markup(resize_keyboard=True)
